openapi: 3.0.0

info:
  title: flopspot
  description: "This is an open-source project mainly written in Laravel/Vue.js. flopspot provides the opportunity
  to rate the WiFi functionality in DB trains only. The satisfaction of the user will be represented as a statistic
  using Chart.js."
  contact:
    name: API Support
    email: s.ahrens@djumla.de
  version: 1.0.1

servers:
- url: https://www.flopspot.de/{basePath}
  description: Staging Server
  variables:
    basePath:
      default: api
- url: http://localhost{port}/{basePath}
  description: Local Server
  variables:
    port:
      enum:
        - :8000
        - :80
        - :81
        -
      default: :8000
    basePath:
      default: api

paths:
  /tweets:
    get:
      description: Returns tweets of the db as an object with several informations
      responses:
        200:
          description: OK
  /rating/insufficient:
      get:
        description: Returns a total of all insufficient ratings
        responses:
          200:
            description: OK
  /rating/satisfying:
      get:
        description: Returns a total of all satisfying ratings
        responses:
          200:
            description: OK

  /rating/satisfactory:
      get:
        description: Returns a total of all satisfactory ratings
        responses:
          200:
            description: OK

  /rating/total:
      get:
        description: Returns a total of all submitted ratings
        responses:
          200:
            description: OK

  /rating/pastSixMonth:
      get:
        description: Returns an array
        responses:
          200:
            description: OK

  /stations:
    post:
      description: Returns an array of stations
      responses:
        200:
          description: OK
      requestBody:
        description: "Enter a valid station for instance: Berlin Hbf"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                station:
                  type: string
              required:
                - station

  /trainNumbers:
    post:
      description: Returns an array of train numbers
      responses:
        200:
          description: OK
      requestBody:
        description: "Enter a valid train number for instance: ICE 23"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trainNumber:
                  type: string
              required:
                - trainNumber


